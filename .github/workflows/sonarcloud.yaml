name: SonarCloud

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
       - uses: actions/checkout@v3
         with:
          fetch-depth: 0
          
       - name: Cache SonarCloud packages
         uses: actions/cache@v3
         with:
            path: ~/.sonar/cache
            key: ${{ runner.os }}-sonar
            restore-keys: |
              ${{ runner.os }}-sonar

       - name: Cache SonarCloud scanner
         id: cache-sonar-scanner
         uses: actions/cache@v3
         with:
             path: ./.sonar/scanner
             key: ${{ runner.os }}-sonar-scanner
             restore-keys: |
               ${{ runner.os }}-sonar-scanner
               
       - name: Install SonarCloud scanner
         if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
         run: |
           mkdir -p ./.sonar/scanner
           dotnet tool update dotnet-sonarscanner --tool-path ./.sonar/scanner
         
       - name: Build and analyze
         env:
           GITHUB_TOKEN: ${{ secrets.secret }}
           SONAR_TOKEN: ${{ secrets.sonartoken }}
         run: |
           ./.sonar/scanner/dotnet-sonarscanner begin /k:"julianobcgato_dotnetwebsimple" /o:"julianobcgato" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
           # Adicione aqui o comando de build, por exemplo: dotnet build
           ./.sonar/scanner/dotnet-sonarscanner end /d:sonar.login="${{ secrets.sonartoken }}"

